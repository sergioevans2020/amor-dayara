<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Minijuego - Coraz칩n Kawaii Saltar칤n 游눘</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@600&display=swap');
    body, html {
      margin: 0; padding: 0; overflow: hidden;
      background: linear-gradient(135deg, #ffe6f0 0%, #ffccde 100%);
      font-family: 'Quicksand', sans-serif;
      user-select: none;
    }
    #gameContainer {
      position: relative;
      width: 100vw;
      height: 100vh;
      overflow: hidden;
    }
    canvas {
      background: #ffd9e6;
      display: block;
      margin: 0 auto;
      border-radius: 15px;
      box-shadow: 0 0 30px rgba(219, 112, 147, 0.7);
    }
    #score {
      position: absolute;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 28px;
      color: #b30059;
      font-weight: 700;
      text-shadow: 1px 1px 3px #fff;
      user-select: none;
      z-index: 10;
    }
    #instructions {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 16px;
      color: #b30059;
      background: rgba(255, 182, 193, 0.7);
      padding: 10px 20px;
      border-radius: 12px;
      user-select: none;
      z-index: 10;
      font-weight: 600;
    }
    #gameOverScreen {
      position: absolute;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(255, 182, 193, 0.85);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      font-size: 32px;
      color: #b30059;
      font-weight: 700;
      font-family: 'Quicksand', sans-serif;
      z-index: 20;
      display: none;
      border-radius: 15px;
      text-align: center;
      padding: 0 20px;
      box-sizing: border-box;
    }
    #gameOverScreen button {
      margin-top: 20px;
      padding: 10px 30px;
      font-size: 20px;
      background: #ff6699;
      border: none;
      border-radius: 15px;
      color: white;
      cursor: pointer;
      font-weight: 700;
      box-shadow: 0 4px 10px rgba(255, 102, 153, 0.6);
      transition: background 0.3s ease;
    }
    #gameOverScreen button:hover {
      background: #cc3366;
    }
  </style>
</head>
<body>
  <div id="gameContainer">
    <div id="score">Puntaje: 0</div>
    <canvas id="gameCanvas" width="800" height="400"></canvas>
    <div id="instructions">Presiona Barra Espaciadora o Click para saltar 仇벒잺</div>
    <div id="gameOverScreen">
      <div>춰Juego terminado!</div>
      <div id="finalScore" style="margin-top: 10px; font-size: 24px;"></div>
      <button id="restartBtn">Jugar de nuevo</button>
    </div>
  </div>

  <script>
    (() => {
      const canvas = document.getElementById('gameCanvas');
      const ctx = canvas.getContext('2d');
      const scoreEl = document.getElementById('score');
      const gameOverScreen = document.getElementById('gameOverScreen');
      const finalScore = document.getElementById('finalScore');
      const restartBtn = document.getElementById('restartBtn');

      const width = canvas.width;
      const height = canvas.height;

      // Coraz칩n kawaii avatar
      const heart = {
        x: 50,
        y: height - 80,
        width: 50,
        height: 50,
        vy: 0,
        gravity: 0.8,
        jumpForce: -15,
        grounded: true
      };

      // Obst치culos (flechas de cupido)
      let obstacles = [];
      const obstacleWidth = 40;
      const obstacleHeight = 20;
      const obstacleSpeed = 6;

      let score = 0;
      let gameOver = false;
      let frameCount = 0;

      // Dibujar coraz칩n kawaii con ojos
      function drawHeart(x, y, size) {
        ctx.save();
        ctx.translate(x, y);
        ctx.scale(size / 50, size / 50);

        // cuerpo coraz칩n
        ctx.fillStyle = '#e91e63';
        ctx.beginPath();
        ctx.moveTo(25, 5);
        ctx.bezierCurveTo(25, -5, 0, 0, 0, 15);
        ctx.bezierCurveTo(0, 30, 25, 40, 25, 50);
        ctx.bezierCurveTo(25, 40, 50, 30, 50, 15);
        ctx.bezierCurveTo(50, 0, 25, -5, 25, 5);
        ctx.fill();

        // sombreado
        let grad = ctx.createRadialGradient(15, 15, 5, 25, 25, 30);
        grad.addColorStop(0, '#ff70a6');
        grad.addColorStop(1, '#b30059');
        ctx.fillStyle = grad;
        ctx.beginPath();
        ctx.moveTo(25, 5);
        ctx.bezierCurveTo(25, -5, 0, 0, 0, 15);
        ctx.bezierCurveTo(0, 30, 25, 40, 25, 50);
        ctx.bezierCurveTo(25, 40, 50, 30, 50, 15);
        ctx.bezierCurveTo(50, 0, 25, -5, 25, 5);
        ctx.fill();

        // ojos kawaii
        ctx.fillStyle = 'white';
        ctx.beginPath();
        ctx.ellipse(15, 20, 7, 9, 0, 0, Math.PI * 2);
        ctx.ellipse(35, 20, 7, 9, 0, 0, Math.PI * 2);
        ctx.fill();

        ctx.fillStyle = '#b30059';
        ctx.beginPath();
        ctx.ellipse(15, 20, 3, 4, 0, 0, Math.PI * 2);
        ctx.ellipse(35, 20, 3, 4, 0, 0, Math.PI * 2);
        ctx.fill();

        ctx.fillStyle = 'white';
        ctx.beginPath();
        ctx.ellipse(13, 16, 2, 3, 0, 0, Math.PI * 2);
        ctx.ellipse(33, 16, 2, 3, 0, 0, Math.PI * 2);
        ctx.fill();

        ctx.restore();
      }

      // Dibujar obst치culo (flecha de cupido)
      function drawObstacle(x, y) {
        ctx.save();
        ctx.translate(x, y);

        // flecha cuerpo
        ctx.fillStyle = '#ff4d94';
        ctx.beginPath();
        ctx.rect(0, 5, 40, 10);
        ctx.fill();

        // punta flecha
        ctx.beginPath();
        ctx.moveTo(40, 0);
        ctx.lineTo(55, 10);
        ctx.lineTo(40, 20);
        ctx.closePath();
        ctx.fill();

        // pluma flecha
        ctx.fillStyle = '#e60073';
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(15, 10);
        ctx.lineTo(0, 20);
        ctx.closePath();
        ctx.fill();

        ctx.restore();
      }

      // Salto
      function jump() {
        if (heart.grounded && !gameOver) {
          heart.vy = heart.jumpForce;
          heart.grounded = false;
        }
      }

      // Detectar colisi칩n
      function checkCollision(rect1, rect2) {
        return (
          rect1.x < rect2.x + rect2.width &&
          rect1.x + rect1.width > rect2.x &&
          rect1.y < rect2.y + rect2.height &&
          rect1.y + rect1.height > rect2.y
        );
      }

      // Actualizar el juego
      function update() {
        if (gameOver) return;

        frameCount++;

        // F칤sica salto
        heart.vy += heart.gravity;
        heart.y += heart.vy;

        if (heart.y + heart.height >= height - 30) {
          heart.y = height - 30 - heart.height;
          heart.vy = 0;
          heart.grounded = true;
        }

        // Crear obst치culos aleatoriamente
        if (frameCount % 90 === 0) {
          const obstacleY = height - 30 - obstacleHeight;
          obstacles.push({ x: width, y: obstacleY, width: obstacleWidth, height: obstacleHeight });
        }

        // Mover obst치culos
        obstacles.forEach((obstacle, i) => {
          obstacle.x -= obstacleSpeed;

          // Quitar obst치culos fuera de pantalla y aumentar puntaje
          if (obstacle.x + obstacle.width < 0) {
            obstacles.splice(i, 1);
            if (!gameOver) score++;
          }

          // Colisi칩n
          if (checkCollision(heart, obstacle)) {
            gameOver = true;
            showGameOver();
          }
        });

        draw();
        if (!gameOver) requestAnimationFrame(update);
      }

      // Dibujar todo
      function draw() {
        ctx.clearRect(0, 0, width, height);

        // suelo
        ctx.fillStyle = '#ffb6c1';
        ctx.fillRect(0, height - 30, width, 30);

        // coraz칩n
        drawHeart(heart.x, heart.y, heart.width);

        // obst치culos
        obstacles.forEach(obstacle => drawObstacle(obstacle.x, obstacle.y));

        // puntaje
        scoreEl.textContent = 'Puntaje: ' + score;
      }

      function showGameOver() {
        finalScore.textContent = 'Tu puntaje final es: ' + score;
        gameOverScreen.style.display = 'flex';
      }

      function restartGame() {
        gameOver = false;
        obstacles = [];
        score = 0;
        frameCount = 0;
        heart.y = height - 80;
        heart.vy = 0;
        heart.grounded = true;
        gameOverScreen.style.display = 'none';
        update();
      }

      // Eventos para saltar
      window.addEventListener('keydown', e => {
        if (e.code === 'Space' || e.key === ' ') {
          e.preventDefault();
          jump();
        }
      });
      window.addEventListener('mousedown', e => jump());

      restartBtn.addEventListener('click', restartGame);

      // Iniciar juego
      update();
    })();
  </script>
</body>
</html>
